[2023-02-06 13:07:42] - Application shutdown requested.
[2023-02-06 13:07:42] - Application availability state ReadinessState changed from ACCEPTING_TRAFFIC to REFUSING_TRAFFIC
[2023-02-06 13:07:42] - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2f7a7219, started on Mon Feb 06 13:07:23 IST 2023
[2023-02-06 13:07:42] - Stopping beans in phase 2147483647
[2023-02-06 13:07:42] - Bean 'webServerGracefulShutdown' completed its stop procedure
[2023-02-06 13:07:42] - Stopping beans in phase 2147483646
[2023-02-06 13:07:42] - Pausing ProtocolHandler ["http-nio-9092"]
[2023-02-06 13:07:42] - Stopping service [Tomcat]
[2023-02-06 13:07:42] - The web application [ROOT] appears to have started a thread named [logback-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.3/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.3/java.lang.Thread.run(Thread.java:833)
[2023-02-06 13:07:42] - The web application [ROOT] appears to have started a thread named [logback-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.3/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.3/java.lang.Thread.run(Thread.java:833)
[2023-02-06 13:07:42] - The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.3/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.3/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.3/java.lang.Thread.run(Thread.java:833)
[2023-02-06 13:07:42] - The web application [ROOT] appears to have started a thread named [logback-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.3/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.3/java.lang.Thread.run(Thread.java:833)
[2023-02-06 13:07:42] - The web application [ROOT] appears to have started a thread named [logback-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.3/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.3/java.lang.Thread.run(Thread.java:833)
[2023-02-06 13:07:42] - The web application [ROOT] appears to have started a thread named [logback-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.3/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.3/java.lang.Thread.run(Thread.java:833)
[2023-02-06 13:07:42] - The web application [ROOT] appears to have started a thread named [logback-7] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.3/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.3/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.3/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.3/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.3/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1170)
 java.base@17.0.3/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.3/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.3/java.lang.Thread.run(Thread.java:833)
[2023-02-06 13:07:42] - Stopping ProtocolHandler ["http-nio-9092"]
[2023-02-06 13:07:42] - Destroying ProtocolHandler ["http-nio-9092"]
[2023-02-06 13:07:42] - Bean 'webServerStartStop' completed its stop procedure
[2023-02-06 13:07:42] - Stopping beans in phase -2147483647
[2023-02-06 13:07:42] - Bean 'springBootLoggingLifecycle' completed its stop procedure
[2023-02-06 13:07:42] - Unregistering JMX-exposed beans on shutdown
[2023-02-06 13:07:42] - Unregistering JMX-exposed beans
[2023-02-06 13:07:42] - Shutting down ExecutorService 'applicationTaskExecutor'
[2023-02-06 13:07:42] - Closing JPA EntityManagerFactory for persistence unit 'default'
[2023-02-06 13:07:42] - HHH000031: Closing
[2023-02-06 13:07:42] - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@b406690] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3adde4ea]
[2023-02-06 13:07:42] - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2023-02-06 13:07:42] - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2023-02-06 13:07:42] - HikariPool-1 - Shutdown initiated...
[2023-02-06 13:07:42] - HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2023-02-06 13:07:42] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1884e671: (connection evicted)
[2023-02-06 13:07:42] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@71b4d292: (connection evicted)
[2023-02-06 13:07:42] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2091ac21: (connection evicted)
[2023-02-06 13:07:42] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2e62af8c: (connection evicted)
[2023-02-06 13:07:42] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@24df7001: (connection evicted)
[2023-02-06 13:07:42] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@482b8ff4: (connection evicted)
[2023-02-06 13:07:42] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@f9c812a: (connection evicted)
[2023-02-06 13:07:42] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5367a4cd: (connection evicted)
[2023-02-06 13:07:42] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4a08487f: (connection evicted)
[2023-02-06 13:07:42] - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7b2e98a4: (connection evicted)
[2023-02-06 13:07:42] - HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2023-02-06 13:07:42] - HikariPool-1 - Shutdown completed.
